name: Backend Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  backend-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pixi
        uses: prefix-dev/setup-pixi@v0.9.0
        with:
          activate-environment: true
          locked: true

      - name: Show pixi version
        run: pixi --version

      - name: Run lint
        run: pixi run -e dev lint-backend

      - name: Create environment file for CI
        run: |
          mkdir -p .env
          echo "DB_HOST=${{ vars.DB_HOST }}" >> .env/database
          echo "DB_PORT=${{ vars.DB_PORT }}" >> .env/database
          echo "DB_NAME=${{ vars.DB_NAME }}" >> .env/database
          echo "DB_USER=${{ vars.DB_USER }}" >> .env/database
          echo "DB_PASSWORD=${{ vars.DB_PASSWORD }}" >> .env/database
          echo "STORAGE_TYPE=${{ vars.STORAGE_TYPE }}" >> .env/storage
          echo "LOCAL_STORAGE_ROOT=${{ vars.LOCAL_STORAGE_ROOT }}" >> .env/storage
          echo "LOCAL_STORAGE_BASE_URL=${{ vars.LOCAL_STORAGE_BASE_URL }}" >> .env/storage

      - name: Setup database
        run: pixi run pg-setup
      - name: Run backend tests with coverage
        run: |
          pixi run -e dev -- test-backend
      - name: Upload coverage summary
        if: always()
        run: |
          echo "Coverage summary:" >> $GITHUB_STEP_SUMMARY
          pixi run -e dev -- test-backend | sed -n '/^=============================== tests coverage/,/^[0-9].*passed/p' >> $GITHUB_STEP_SUMMARY

      - name: Cleanup database
        run: pixi run pg-cleanup
